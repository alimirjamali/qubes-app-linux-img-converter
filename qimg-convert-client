#!/usr/bin/python3 -O
# -*- coding: utf-8 -*-

# The Qubes OS Project, http://www.qubes-os.org
#
# Copyright (C) 2014  Wojciech Porczyk <wojciech@porczyk.eu>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

from __future__ import print_function

import argparse
import os
import qubesimgconverter

# Maximum --allow-highres supported uncompressed image size =~ 15.6GB
HIGHRES_WIDTH = 64000
HIGHRES_HEIGHT = 64000

parser = argparse.ArgumentParser(
        description='Trustify image',
        epilog='To allow image sizes over 1GB with --allow-highres option,'
        'increase "/tmp" allocated free space in Source VM.\n'
        'Both SRC and DST may specify format in gm(1) way,\n'
        'i.e. png:aqq.gif\n')

parser.add_argument('--progress', action='store_true',
    help='Print percentage (for zenity --progress)')
parser.add_argument('src', metavar='SRC', help='Source path')
parser.add_argument('dst', metavar='DST', help='Destination path')
parser.add_argument('--allow-highres', action='store_true',
        help=f'Allow pictures up to {HIGHRES_WIDTH}x{HIGHRES_HEIGHT} pixels')

def main():
    args = parser.parse_args()

    if args.progress:
        orig_stdout = open(int(os.environ['SAVED_FD_1']), 'w')
        print('10', file=orig_stdout)

    kwargs = {}
    if args.allow_highres:
        kwargs = {'max_width': HIGHRES_WIDTH, 'max_height': HIGHRES_HEIGHT}

    img = qubesimgconverter.Image.get_through_dvm(args.src, **kwargs)
    if args.progress: print('50', file=orig_stdout)
    img.save(args.dst)
    if args.progress: print('100', file=orig_stdout)

if __name__ == '__main__':
    main()

# vim: ft=python sw=4 ts=4 et
